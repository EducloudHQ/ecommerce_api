AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'ecommerce-api

  Powertools for AWS Lambda (Python) example

  '
Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: python3.10
    Tracing: Active
    Environment:
      Variables:
        TABLE_NAME:
          Ref: EcommerceAppTable
        POWERTOOLS_SERVICE_NAME: ecommerce-api
        POWERTOOLS_METRICS_NAMESPACE: ecommerce-api-metric
        LOG_LEVEL: DEBUG
        POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
        POWERTOOLS_LOGGER_LOG_EVENT: true
Resources:
  RESTAPIAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: ecommerce-api-Access-Logs
      RetentionInDays: 1
  RESTAPIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: AllowSqsIntegration
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            - logs:PutLogEvents
            - logs:GetLogEvents
            - logs:FilterLogEvents
            Resource:
              Fn::GetAtt:
              - RESTAPIAccessLogs
              - Arn
  EcommerceRESTAPI:
    Type: AWS::Serverless::Api
    Properties:
      Description: ecommerce api with api-key authentication
      Name: EcommerceRESTAPI
      StageName: Dev
      Auth:
        ApiKeyRequired: true
  ProductLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      CodeUri: ProductLambdaFunction
      Description: Lambda function for all product endpoints
      Architectures:
      - x86_64
      Tracing: Active
      Events:
        LoadProductPath:
          Type: Api
          Properties:
            Path: /loadProducts
            Method: POST
            RestApiId:
              Ref: EcommerceRESTAPI
            Auth:
              ApiKeyRequired: true
        GetProductPath:
          Type: Api
          Properties:
            Path: /products/{product_id}
            Method: GET
            RestApiId:
              Ref: EcommerceRESTAPI
            Auth:
              ApiKeyRequired: true
        GetProductsPath:
          Type: Api
          Properties:
            Path: /products
            Method: GET
            RestApiId:
              Ref: EcommerceRESTAPI
            Auth:
              ApiKeyRequired: true
      Layers:
      - Fn::GetAtt:
        - AwsSamAutoDependencyLayerNestedStack
        - Outputs.ProductLambdaFunction5ee6b3f5DepLayer
    Connectors:
      productConnectors:
        Properties:
          Destination:
            Id: EcommerceAppTable
          Permissions:
          - Write
          - Read
    Metadata:
      SamResourceId: ProductLambdaFunction
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
  EcommerceAppTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  AwsSamAutoDependencyLayerNestedStack:
    DeletionPolicy: Delete
    Metadata:
      CreatedBy: AWS SAM CLI sync command
    Properties:
      TemplateURL: /Users/rosius/Documents/ecommerce-api/.aws-sam/auto-dependency-layer/adl_nested_template.yaml
    Type: AWS::CloudFormation::Stack
Outputs:
  EcommerceRestApi:
    Description: API Gateway endpoint URL for Dev environment for ecommerce rest api
    Value:
      Fn::Sub: https://${EcommerceRESTAPI}.execute-api.${AWS::Region}.amazonaws.com/Dev
  ProductLambdaFunction:
    Description: Product Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ProductLambdaFunction
      - Arn
